---
# Starts all the services used by pyaleph, minus pyaleph itself. This is used for local development.
# Use the docker-compose/docker-compose.yml file for deployment.

version: '2.2'


volumes:
  pyaleph-ipfs:
  pyaleph-postgres:


services:

  rabbitmq:
    restart: always
    image: rabbitmq:3.11.15-management
    networks:
      - pyaleph
    environment:
      RABBITMQ_DEFAULT_USER: aleph-p2p
      RABBITMQ_DEFAULT_PASS: change-me!
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"

  p2p-service:
    restart: always
    image: alephim/p2p-service:0.1.3
    networks:
      - pyaleph
    volumes:
      - ../../config.yml:/etc/p2p-service/config.yml
      - ../../keys/node-secret.pkcs8.der:/etc/p2p-service/node-secret.pkcs8.der
    depends_on:
      - rabbitmq
    environment:
      RUST_LOG: info
    ports:
      - "4025:4025"
      - "127.0.0.1:4030:4030"
    command:
      - "--config"
      - "/etc/p2p-service/config.yml"
      - "--private-key-file"
      - "/etc/p2p-service/node-secret.pkcs8.der"

  ipfs:
    restart: always
    image: ipfs/kubo:v0.15.0
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "127.0.0.1:5001:5001"
      - "127.0.0.1:8080:8080"
    volumes:
      - "pyaleph-ipfs:/data/ipfs"
    environment:
      - IPFS_PROFILE=server
    networks:
      - pyaleph
    command: ["daemon", "--enable-pubsub-experiment", "--migrate"]

  postgres:
    restart: always
    image: postgres:15.1
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - pyaleph-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: decentralize-everything
      POSTGRES_DB: aleph
    networks:
      - pyaleph
    shm_size: "2gb"

  redis:
    restart: always
    image: redis:7.0.10
    ports:
      - "127.0.0.1:6380:6379"
    networks:
      - pyaleph


networks:
  pyaleph:
